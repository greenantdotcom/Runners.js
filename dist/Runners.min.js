;(function(window) {'use strict';var Runners = {};var Workers = {};function identity(e){return e}function remove(e,t){var r=e.indexOf(t);r>=0&&e.splice(r,1)}function combineArgs(e,t){for(var r=0;t.length>r;++r){var i=t[r];Array.isArray(i)?e=e.concat(i):e.push(i)}return e}function combine(e,t){return Array.isArray(t)?e=this._doneCbs.concat(t):null!=t&&e.push(t),e}function createPublicInterface(e){var t={};for(var r in e){var i=e[r];"function"==typeof i&&"_"!==r[0]&&(t[r]=i.bind(e))}return t}function extend(e,t){for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e}function normalizeArgs(e,t,r,i){return"function"==typeof e?(r=e,i=t,t=null,e=null):Array.isArray(e)||"object"!=typeof e?Array.isArray(e)&&"function"==typeof t&&(i=r,r=t,t=null):(i=r,r=t,t=e,e=null),i=i||{},extend(i,optsDefaults),{args:e,context:t,fn:r,opts:i}}function Promise(e){this._progressCbs=[],this._doneCbs=[],this._failCbs=[],this._interruptListener=e,this._doneFilter=identity,this._failFilter=identity,this._state="pending"}function LinkedList(){this._head=null,this._tail=null,this._size=0}function Queue(e){this._maxSize=null==e?-1:e,this._list=new LinkedList}function WorkerWrapper(e){this.worker=e}function TaskWrapper(e){this.task=e,this._promise=new Promise(this._interruptRequested.bind(this)),this._publicPromise=createPublicInterface(this._promise),this._interruptRequestListeners=[]}function AbstractRunnerPool(e,t,r){this._queue=e,this._minWorkers=t,this._maxWorkers=r,this._runningWorkers=new LinkedList,this._idleWorkers=new LinkedList,this._receiveWorkerMessage=this._receiveWorkerMessage.bind(this);for(var i=0;t>i;++i){var s=this._createWorker();this._idleWorkers.add(s)}}function RunnerPool(e,t){AbstractRunnerPool.call(this,e,t,t)}function PromisingWorker(e){e=workerFactory._cfg.baseUrl+"/webworkers/pWorker.js"+(e?"#"+e:"");var t=new Worker(e),r=new MessageChannel;return t.postMessage("internalComs",[r.port2]),r.port1.onmessage=this._messageReceived.bind(this),this._channel=r,this._invokeId=0,this._promises={},this._readyCbs=[],this.fns={},this.registrations={},this._regCbs=[],this.submit=this.submit.bind(this),this}function PromisingWorkerPool(e,t,r,i){this._url=e,this._queue=t,this._minWorkers=r,this._maxWorkers=i,this._runningWorkers=new LinkedList,this._idleWorkers=new LinkedList,this._workerCreated=this._workerCreated.bind(this);for(var s=0;r>s;++s)this._createWorker(this._workerCreated)}var optsDefaults={promise:!0,async:!1,interleave:!1};Promise.prototype={then:function(e,t,r){return this._doneCbs=combine(this._doneCbs,e),this._failCbs=combine(this._failCbs,t),this._progressCbs=combine(this._progressCbs,r),this},done:function(){return"resolved"===this._state?this._callLateArrivals(arguments):"pending"===this._state&&(this._doneCbs=combineArgs(this._doneCbs,arguments)),this},fail:function(){return"rejected"===this._state?this._callLateArrivals(arguments):"pending"===this._state&&(this._failCbs=combineArgs(this._failCbs,arguments)),this},always:function(){return this.done.apply(this,arguments),this.fail.apply(this,arguments),this},progress:function(){return"pending"===this._state&&(this._progressCbs=combineArgs(this._progressCbs,arguments)),this},pipe:function(e,t){switch(this._doneFilter=e||identity,this._failFilter=t||identity,this._state){case"rejected":this._result=this._failFilter(this._result);break;case"resolved":this._result=this._doneFilter(this._result)}return this},interrupt:function(){return this._interruptListener&&this._interruptListener(),this},state:function(){return this._state},_callLateArrivals:function(e){for(var t=0;e.length>t;++t){var r=e[t];Array.isArray(r)?r.forEach(function(e){e(this._result)},this):r(this._result)}},_setState:function(e,t){if("pending"!==this._state)throw"Illegal state transition";switch(this._state=e,e){case"rejected":this._result=this._failFilter(t),this._callFailbacks();break;case"resolved":this._result=this._doneFilter(t),this._callDonebacks();break;default:throw"Illegal state transition"}this._failCbs=[],this._doneCbs=[],this._failFilter=this._doneFilter=identity},_callFailbacks:function(){this._failCbs.forEach(function(e){try{e(this._result)}catch(t){console.log(t)}},this)},_callDonebacks:function(){this._doneCbs.forEach(function(e){try{e(this._result)}catch(t){console.log(t)}},this)},_progressMade:function(e){this._progressCbs.forEach(function(t){try{t(e)}catch(r){console.log(r)}},this)}},LinkedList.prototype={pushBack:function(e){++this._size;var t={value:e,next:null,prev:null};return null==this._head?this._head=this._tail=t:(this._tail.next=t,t.prev=this._tail,this._tail=t),t},popBack:function(){--this._size;var e=this._tail;return this._tail=this._tail.prev,null!=this._tail&&(this._tail.next=null),e},popFront:function(){--this._size;var e=this._head;return this._head=this._head.next,this._head.prev=null,e},pushFront:function(e){++this._size;var t={value:e,next:null,prev:null};return null==this._head?this._head=this._tail=t:(this._head.prev=t,t.next=this._head,this._head=t),t},removeWithNode:function(e){if(null==e)throw"Null node";--this._size;var t=e.prev,r=e.next;null!=t&&(t.next=e.next),null!=r&&(r.prev=e.prev),e.next=e.prev=null},add:function(e){return this.pushFront(e)},remove:function(){return this.popBack()},forEach:function(e,t){for(var r=this._head;null!=r;)e.call(t,r.value),r=r.next},clear:function(){this._head=this._tail=null,this._size=0},size:function(){return this._size}},Queue.prototype={add:function(e){this._list.pushFront(e)},remove:function(){return this._list.popBack()},clear:function(){this._list.clear()},full:function(){return 0>this._maxSize?!1:this._list.size()>=this._maxSize},size:function(){return this._list.size()}};var workerFactory={_cfg:{baseUrl:"."},config:function(e){for(var t in e)e.hasOwnProperty(t)&&(this._cfg[t]=e[t])},newFixedRunnerPool:function(e,t){var r=new Queue(t);return new RunnerPool(r,e)},newSingleRunnerPool:function(){var e=new Queue;return new RunnerPool(e,1)},newPWorker:function(e){return new PromisingWorker(e)},newFixedPWorkerPool:function(e,t,r){return"number"==typeof e&&(r=t,t=e,e=void 0),new PromisingWorkerPool(e,new Queue(r),t,t)}};WorkerWrapper.prototype={postMessage:function(e){this.worker.postMessage(e)},onMessage:function(e){this.worker.onmessage=e},terminate:function(){this.worker.terminate()},addTask:function(e){this.currentTask=e;var t=this;e.onInterruptRequest(function(){t.postMessage({type:"interrupt"})})},_workCompleted:function(e){var t;t="failed"===e.type?"rejected":"resolved",this.currentTask._setState(t,e.result)},_progressMade:function(e){this.currentTask._progressMade(e)}},TaskWrapper.prototype={promise:function(){return this._publicPromise},onInterruptRequest:function(e){this._interruptRequestListeners.push(e)},_setState:function(e,t){this._promise._setState(e,t)},_progressMade:function(e){this._promise._progressMade(e)},_interruptRequested:function(){this._interruptRequestListeners.forEach(function(e){e()},this)}},AbstractRunnerPool.prototype={submit:function(e,t,r,i){if(this._terminated)throw"Pool has been terminated and can not accept new tasks.";var s=normalizeArgs(e,t,r,i),n=new TaskWrapper(s);if(this._idleWorkers.size()>0){var o=this._idleWorkers.remove().value;this._dispatchToWorker(o,n)}else if(this._maxWorkers>this._runningWorkers.size()){var o=this._createWorker();this._dispatchToWorker(o,n)}else{if(this._queue.full())throw"Task queue has reached its limit";this._queue.add(n)}return n.promise()},numWorkers:function(){return this._idleWorkers.size()+this._runningWorkers.size()},queueSize:function(){return this._queue.size()},_dispatchToWorker:function(e,t){t.task.fn=""+t.task.fn,e.runningNode=this._runningWorkers.add(e),e.addTask(t),e.postMessage({type:"task",data:t.task})},_createWorker:function(){var e=new WorkerWrapper(this._createActualWorker()),t=this;return e.onMessage(function(r){t._receiveWorkerMessage(e,r)}),e},terminate:function(){this._queue.clear(),this._runningWorkers.forEach(function(e){e.terminate()},this),this._idleWorkers.forEach(function(e){e.terminate()},this),this._runningWorkers.clear(),this._idleWorkers.clear(),this._terminated=!0},_receiveWorkerMessage:function(e,t){switch(t.data.type){case"completed":case"failed":try{e._workCompleted(t.data)}catch(t){console.log(t)}this._queue.size()>0?this._dispatchToWorker(e,this._queue.remove().value):(this._runningWorkers.removeWithNode(e.runningNode),e.runningNode=null,this._idleWorkers.add(e));break;case"progress":e._progressMade(t.data.data);break;case"interleave":}}};var proto=RunnerPool.prototype=Object.create(AbstractRunnerPool.prototype);proto._createActualWorker=function(){return new Worker(workerFactory._cfg.baseUrl+"/webworkers/runner.js")},PromisingWorker.prototype={_messageReceived:function(e){switch(e.data.type){case"registration":var t=this.fns[e.data.name]=this._createInvoker(e.data);this.registrations[e.data.name]=e.data,this._notifyRegCbs(t,e.data);break;case"completed":var r=this._promises[e.data.id];delete this._promises[e.data.id],r._setState("resolved",e.data.result);break;case"failed":var r=this._promises[e.data.id];delete this._promises[e.data.id],r._setState("rejected",e.data.result);break;case"ready":this._ready(e.data.err);break;case"progress":var r=this._promises[e.data.id];r._progressMade(e.data.data)}},_createInvoker:function(e){var t=this;return function(){var r,i={type:"invoke",fn:e.name,id:++t._invokeId,args:Array.prototype.slice.call(arguments,0)};return e.promise&&(r=t._promises[i.id]=this.__promise?this.__promise:new Promise),t._channel.port1.postMessage(i),r?createPublicInterface(r):void 0}},submit:function(e,t,r,i){return this._submit(normalizeArgs(e,t,r,i))},_submit:function(e,t){return console.log(e),e.type="pass_invoke",e.id=++this._invokeId,e.fn=""+e.fn,e.opts.promise&&(t?this._promises[e.id]=t:t=this._promises[e.id]=new Promise),this._channel.port1.postMessage(e),t?createPublicInterface(t):void 0},on:function(e,t){switch(e){case"registration":this._regCbs.push(t);break;case"ready":this.ready(t)}},off:function(e,t){switch(e){case"registration":remove(this._regCbs,t);break;case"ready":remove(this._readyCbs,t)}},_notifyRegCbs:function(e,t){this._regCbs.forEach(function(r){r(e,t)})},ready:function(e){this._isReady?e(this,this._err):this._readyCbs.push(e)},_ready:function(e){this._readyCbs.forEach(function(t){t(this,e)},this),this._isReady=!0,this._err=e,this._readyCbs=[]}};var regDoc="register: function(name, func, [promise=true] [, async=false] [, interleave=false])";PromisingWorkerPool.prototype={_createWorker:function(e){var t=new PromisingWorker(this._url);t.ready(e)},_workerCreated:function(e,t){t?(console.log(this._url+": Error adding worker."),console.log(t)):(this.fns||this._createFns(e),this._idleWorkers.add(e))},_createFns:function(e){this.fns={};var t=this;for(var r in e.fns){var i=e.registrations[r];this.fns[r]=function(r,i){return function(){t._submit(e.fns[i],r,arguments)}}(i,r)}},submit:function(e,t,r,i){var s=normalizeArgs(e,t,r,i);return this._submit(s.fn,s.opts,s.args,s.context,!0)},_submit:function(e,t,r,i,s){if(!t.promise)throw this._url+": All functions used in a PWorkerPool must return"+" a promise.  Check your function registration. "+regDoc;var n={fn:e,opts:t,args:r,context:i,passInvoke:s},o=null,a=null;if(this._idleWorkers.size()>0){a=this._idleWorkers.remove().value;var u=this._dispatchToWorker(a,n);t.interleave&&this._idleWorkers.add(a),o=u}else if(this._maxWorkers>this._runningWorkers.size()){var u=new Promise,h=this;this._createWorker(function(e,r){a=e,r?(console.log(this._url+": Error adding worker."),console.log(r)):(n.promise=u,h._dispatchToWorker(a,n),t.interleave&&h._idleWorkers.add(a))}),o=u}else{if(this._queue.full())throw"Task queue has reached its limit";n.promise=new Promise,this._queue.add(n),o=n.promise}var h=this;o.always(function(){h._workerCompleted(a,t)})},_workerCompleted:function(e){if(this._queue.size()>0){var t=this._queue.remove().value;this._dispatchToWorker(e,t)}else e.runningNode&&(this._runningWorkers.removeWithNode(e.runningNode),e.runningNode=null,this._idleWorkers.pushFront(e))},numWorkers:function(){return this._idleWorkers.size()+this._runningWorkers.size()},queueSize:function(){return this._queue.size()},_dispatchToWorker:function(e,t){if(t.passInvoke){delete t.passInvoke;var r=t.promise;return delete t.promise,e._submit(t,r)}e.runningNode=this._runningWorkers.add(e);var r=t.fn.apply({__promise:t.promise},t.args);return r},terminate:function(){this._queue.clear(),this._runningWorkers.forEach(function(e){e.terminate()},this),this._idleWorkers.forEach(function(e){e.terminate()},this),this._runningWorkers.clear(),this._idleWorkers.clear(),this._terminated=!0}},"undefined"!=typeof define?define(function(){return workerFactory}):"undefined"!=typeof exports?exports=workerFactory:window.Runners=workerFactory;}(this));